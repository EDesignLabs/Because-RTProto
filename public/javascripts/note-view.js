// Generated by CoffeeScript 1.3.3

define(['d3view', 'handle-view'], function(D3View, HandleView) {
  var NoteView;
  return NoteView = D3View.extend({
    tagName: 'g',
    initialize: function(options) {
      this.constructor.__super__.initialize.call(this, options);
      return this.model.addEventListener(gapi.drive.realtime.EventType.OBJECT_CHANGED, _.bind(this.onObjectChanged, this));
    },
    onObjectChanged: function() {
      return this.render();
    },
    render: function() {
      var _ref;
      this.d3el.attr({
        'id': 'note-' + this.model.id,
        'x': 0,
        'y': 0,
        'transform': "matrix(1 0 0 1 " + (this.model.get('x').getText()) + " " + (this.model.get('y').getText()) + ")",
        'data-type': 'note',
        'data-object-id': this.model.id
      });
      if (!this.noteRectElement) {
        this.noteRectElement = this.d3el.append('rect');
      }
      this.noteRectElement.attr({
        'id': 'note-rect-' + this.model.id,
        'width': 100,
        'height': 50,
        'fill': this.model.get('selected').getText() === 'true' ? 'white' : 'lightsteelblue',
        'stroke': ((_ref = this.model.get('color')) != null ? _ref.getText() : void 0) || 'gray',
        'data-type': 'note-rect',
        'data-object-id': this.model.id
      });
      if (!this.titleElement) {
        this.titleElement = this.d3el.append('text').text(this.model.get('title').getText());
      }
      this.titleElement.attr({
        'id': 'note-title-' + this.model.id,
        'style': 'fill:black;stroke:none',
        'x': 5,
        'y': 15,
        'font-size': 12,
        'data-type': 'title',
        'data-object-id': this.model.id
      });
      if (!this.descElement) {
        this.descElement = this.d3el.append('text').text(this.model.get('desc').getText());
      }
      this.descElement.attr({
        'id': 'note-desc-' + this.model.id,
        'style': 'fill:blue;stroke:none',
        'x': 5,
        'y': 30,
        'width': 50,
        'height': 'auto',
        'font-size': 8,
        'data-type': 'note-rect',
        'data-object-id': this.model.id
      });
      if (!this.handleView) {
        this.handleView = new HandleView({
          model: this.model,
          parent: this.d3el
        });
        return this.handleView.render();
      }
    }
  });
});
