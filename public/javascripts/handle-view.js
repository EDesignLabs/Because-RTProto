// Generated by CoffeeScript 1.3.3

define(["d3view"], function(D3View) {
  var NoteView;
  return NoteView = D3View.extend({
    tagName: 'g',
    initialize: function(options) {
      this.constructor.__super__.initialize.call(this, options);
      this.model.get('hx').addEventListener(gapi.drive.realtime.EventType.TEXT_INSERTED, _.bind(this.onHandleXChanged, this));
      return this.model.get('hy').addEventListener(gapi.drive.realtime.EventType.TEXT_INSERTED, _.bind(this.onHandleYChanged, this));
    },
    onHandleXChanged: function(rtEvent) {
      this.lineElement.attr({
        'x2': this.model.get('hx').getText() || 200
      });
      return this.circleElement.attr({
        'cx': this.model.get('hx').getText() || 200
      });
    },
    onHandleYChanged: function(rtEvent) {
      this.lineElement.attr({
        'y2': this.model.get('hy').getText() || 25
      });
      return this.circleElement.attr({
        'cy': this.model.get('hy').getText() || 25
      });
    },
    render: function() {
      var _ref;
      this.d3el.attr({
        'id': 'handle-' + this.model.id,
        'data-type': 'handle',
        'data-object-id': this.model.id
      });
      if (!this.lineElement) {
        this.lineElement = this.d3el.append('line');
      }
      this.lineElement.attr({
        'id': 'handle-line-' + this.model.id,
        'x1': 100,
        'y1': 25,
        'x2': this.model.get('hx').getText() || 200,
        'y2': this.model.get('hy').getText() || 25,
        'stroke': 'black',
        'strokeWidth': 2,
        'opacity': this.model.get('selected').getText() === 'true' ? 0.0 : 1.0,
        'data-type': 'handle-line',
        'data-object-id': this.model.id
      });
      if (!this.circleElement) {
        this.circleElement = this.d3el.append('circle');
      }
      return this.circleElement.attr({
        'id': 'handle-circle-' + this.model.id,
        'r': 5,
        'cx': this.model.get('hx').getText() || 200,
        'cy': this.model.get('hy').getText() || 25,
        'fill': ((_ref = this.model.get('color')) != null ? _ref.getText() : void 0) || 'gray',
        'stroke': this.model.get('selected').getText() === 'true' ? 'black' : 'darkslateblue',
        'strokeWidth': 10,
        'data-type': 'handle-circle',
        'data-object-id': this.model.id
      });
    }
  });
});
